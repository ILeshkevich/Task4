<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\internal-nlog.txt">

    <!-- enable asp.net core layout renderers -->
    <extensions>
        <add assembly="NLog.Web.AspNetCore"/>
    </extensions>

    <!-- the targets to write to -->
    <targets>
        <!-- write logs to file  -->

        <!-- another file log, only own logs. Uses some ASP.NET core renderers -->        
        
        <target xsi:type="Database" name="db" connectionString="${configsetting:name=ConnectionStrings.DefaultConnection}">
            <commandType>StoredProcedure</commandType>
            <commandText>[dbo].[insert]</commandText>
            <parameter name="@application" layout="AspNetCoreNlog" />
            <parameter name="@logged" layout="${date}" />
            <parameter name="@level" layout="${level}" />
            <parameter name="@message" layout="${message}" />
            <parameter name="@logger" layout="${logger}" />
            <parameter name="@callSite" layout="${callsite:filename=true}" />
            <parameter name="@exception" layout="${exception:tostring}" />
        </target>

    </targets>

    <!-- rules to map from logger name to target -->
    <rules>
        <!--All logs, including from Microsoft-->
        <logger name="*" minlevel="Trace" writeTo="allfile" />

        <!--All logs, including from Microsoft-->
        <logger name="*" minlevel="Trace" writeTo="db" />
        
        <!--Skip non-critical Microsoft logs and so log only own logs-->
        <logger name="Microsoft.*" maxlevel="Info" final="true" /> <!-- BlackHole without writeTo -->
        <logger name="*" minlevel="Trace" writeTo="ownFile-web" />
    </rules>
</nlog>