@model IReadOnlyList<GitApp.Models.ViewModels.VcsRepositoryViewModel>
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<div id="loading-container">
  
</div>
<a class="btn btn-dark mb-3" asp-action="Upload" asp-controller="VcsRepository">Upload</a>

<table class="table table-striped table-sm table-bordered">
    <thead>
    <tr>
        <th>#</th>
        <th>Url</th>
        <th>Info</th>
        <th>Most changin files</th>
        <th>File changes count</th>
    </tr>
    </thead>
    <tbody>
    @{var i = 1;}
    @foreach (var item in Model)
    {
        <tr>
            <td rowspan="3">@(i++)</td>
            <td rowspan="3"><a href="@item.Url">@item.Url</a></td>
            <td rowspan="3"><a class="btn btn-dark" asp-action="Info" asp-route-id="@item.Id">Info</a></td>
            <td>@item.Files[0].Name</td>
            <td>@item.Files[0].Count</td>
        </tr>

        @for (var a = 1; a < item.Files.Count && a < 3; a++)
        {
            <tr>
                <td>@item.Files[a].Name</td>
                <td>@item.Files[a].Count</td>
            </tr>
        }
    }
    </tbody>

</table>

<script src="js/signalr.min.js"></script>
<script>
    let hubUrl = 'http://localhost:5001/upload';
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl(hubUrl)
        .configureLogging(signalR.LogLevel.Information)
        .build();
    
    let loading_container = document.getElementById("loading-container");
    
    
    hubConnection.on("Upload", function (data) {
        loading_container.innerHTML="<div class=\"d-flex align-items-center\">\n"+
                                     "    <strong>" + data + "</strong>\n"+
                                     "    <div class=\"spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n"+
                                     "  </div>";
    });
        
    hubConnection.on("Uploaded", function (data) {
            loading_container.innerHTML="";
        });
    
    hubConnection.start();
</script>